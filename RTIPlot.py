import matplotlib.pyplot as plt
import numpy as np

#Speed of light 
c = 299,792,458*10^-12

#Sample data from deepseek transformed into how we will actually be receiving the data
"""
receivedData = ([[0.1,[10, 15, 20, 25, 30, 25, 20, 15, 10, 5]],
                    [0.2,[12, 17, 22, 27, 32, 27, 22, 17, 12, 7]], 
                    [0.3,[8, 13, 18, 23, 28, 23, 18, 13, 8, 3]],
                    [0.4,[15, 20, 25, 30, 35, 30, 25, 20, 15, 10]],
                    [0.5,[5, 10, 15, 20, 25, 20, 15, 10, 5, 1]],
                    [0.6,[20, 25, 30, 35, 40, 35, 30, 25, 20, 15]],
                    [0.7,[7, 12, 17, 22, 27, 22, 17, 12, 7, 2]],
                    [0.8,[18, 23, 28, 33, 38, 33, 28, 23, 18, 13]],
                    [0.9,[25, 30, 35, 40, 45, 40, 35, 30, 25, 20]]])
"""
receivedData = ([[0.1, [10, 15, 20, 25, 30, 25, 20, 15, 10, 5]],
                [0.2, [12, 17, 22, 27, 32, 27, 22, 17, 12, 7]], 
                [0.3, [8, 13, 18, 23, 28, 23, 18, 13, 8, 3]],
                [0.4, [15, 20, 25, 30, 35, 30, 25, 20, 15, 10]],
                [0.5, [5, 10, 15, 20, 25, 20, 15, 10, 5, 1]],
                [0.6, [20, 25, 30, 35, 40, 35, 30, 25, 20, 15]],
                [0.7, [7, 12, 17, 22, 27, 22, 17, 12, 7, 2]],
                [0.8, [18, 23, 28, 33, 38, 33, 28, 23, 18, 13]],
                [0.9, [25, 30, 35, 40, 45, 40, 35, 30, 25, 20]],
                [1.0, [30, 35, 40, 45, 50, 45, 40, 35, 30, 25]],
                [1.1, [10, 20, 30, 40, 50, 40, 30, 20, 10, 5]],
                [1.2, [5, 15, 25, 35, 45, 35, 25, 15, 5, 1]],
                [1.3, [22, 27, 32, 37, 42, 37, 32, 27, 22, 17]],
                [1.4, [8, 18, 28, 38, 48, 38, 28, 18, 8, 3]],
                [1.5, [35, 40, 45, 50, 55, 50, 45, 40, 35, 30]],
                [1.6, [12, 22, 32, 42, 52, 42, 32, 22, 12, 7]],
                [1.7, [40, 45, 50, 55, 60, 55, 50, 45, 40, 35]],
                [1.8, [15, 25, 35, 45, 55, 45, 35, 25, 15, 10]],
                [1.9, [45, 50, 55, 60, 65, 60, 55, 50, 45, 40]],
                [2.0, [20, 30, 40, 50, 60, 50, 40, 30, 20, 15]],
                [2.1, [50, 55, 60, 65, 70, 65, 60, 55, 50, 45]],
                [2.2, [25, 35, 45, 55, 65, 55, 45, 35, 25, 20]],
                [2.3, [10, 25, 40, 55, 70, 55, 40, 25, 10, 5]],
                [2.4, [55, 60, 65, 70, 75, 70, 65, 60, 55, 50]],
                [2.5, [30, 40, 50, 60, 70, 60, 50, 40, 30, 25]],
                [2.6, [15, 30, 45, 60, 75, 60, 45, 30, 15, 10]],
                [2.7, [60, 65, 70, 75, 80, 75, 70, 65, 60, 55]],
                [2.8, [35, 45, 55, 65, 75, 65, 55, 45, 35, 30]],
                [2.9, [20, 35, 50, 65, 80, 65, 50, 35, 20, 15]],
                [3.0, [65, 70, 75, 80, 85, 80, 75, 70, 65, 60]],
                [3.1, [40, 50, 60, 70, 80, 70, 60, 50, 40, 35]],
                [3.2, [25, 40, 55, 70, 85, 70, 55, 40, 25, 20]],
                [3.3, [70, 75, 80, 85, 90, 85, 80, 75, 70, 65]],
                [3.4, [45, 55, 65, 75, 85, 75, 65, 55, 45, 40]],
                [3.5, [30, 45, 60, 75, 90, 75, 60, 45, 30, 25]],
                [3.6, [75, 80, 85, 90, 95, 90, 85, 80, 75, 70]],
                [3.7, [50, 60, 70, 80, 90, 80, 70, 60, 50, 45]],
                [3.8, [35, 50, 65, 80, 95, 80, 65, 50, 35, 30]],
                [3.9, [80, 85, 90, 95, 100, 95, 90, 85, 80, 75]],
                [4.0, [55, 65, 75, 85, 95, 85, 75, 65, 55, 50]],
                [4.1, [40, 55, 70, 85, 100, 85, 70, 55, 40, 35]],
                [4.2, [85, 90, 95, 100, 105, 100, 95, 90, 85, 80]],
                [4.3, [60, 70, 80, 90, 100, 90, 80, 70, 60, 55]],
                [4.4, [45, 60, 75, 90, 105, 90, 75, 60, 45, 40]],
                [4.5, [90, 95, 100, 105, 110, 105, 100, 95, 90, 85]],
                [4.6, [65, 75, 85, 95, 105, 95, 85, 75, 65, 60]],
                [4.7, [50, 65, 80, 95, 110, 95, 80, 65, 50, 45]],
                [4.8, [95, 100, 105, 110, 115, 110, 105, 100, 95, 90]],
                [4.9, [70, 80, 90, 100, 110, 100, 90, 80, 70, 65]],
                [5.0, [55, 70, 85, 100, 115, 100, 85, 70, 55, 50]],
                [5.1, [100, 105, 110, 115, 120, 115, 110, 105, 100, 95]],
                [5.2, [75, 85, 95, 105, 115, 105, 95, 85, 75, 70]],
                [5.3, [60, 75, 90, 105, 120, 105, 90, 75, 60, 55]],
                [5.4, [105, 110, 115, 120, 125, 120, 115, 110, 105, 100]],
                [5.5, [80, 90, 100, 110, 120, 110, 100, 90, 80, 75]],
                [5.6, [65, 80, 95, 110, 125, 110, 95, 80, 65, 60]],
                [5.7, [110, 115, 120, 125, 130, 125, 120, 115, 110, 105]],
                [5.8, [85, 95, 105, 115, 125, 115, 105, 95, 85, 80]],
                [5.9, [70, 85, 100, 115, 130, 115, 100, 85, 70, 65]],
                [6.0, [115, 120, 125, 130, 135, 130, 125, 120, 115, 110]],
                [6.1, [90, 100, 110, 120, 130, 120, 110, 100, 90, 85]],
                [6.2, [75, 90, 105, 120, 135, 120, 105, 90, 75, 70]],
                [6.3, [120, 125, 130, 135, 140, 135, 130, 125, 120, 115]],
                [6.4, [95, 105, 115, 125, 135, 125, 115, 105, 95, 90]],
                [6.5, [80, 95, 110, 125, 140, 125, 110, 95, 80, 75]],
                [6.6, [125, 130, 135, 140, 145, 140, 135, 130, 125, 120]],
                [6.7, [100, 110, 120, 130, 140, 130, 120, 110, 100, 95]],
                [6.8, [85, 100, 115, 130, 145, 130, 115, 100, 85, 80]],
                [6.9, [130, 135, 140, 145, 150, 145, 140, 135, 130, 125]],
                [7.0, [105, 115, 125, 135, 145, 135, 125, 115, 105, 100]],
                [7.1, [90, 105, 120, 135, 150, 135, 120, 105, 90, 85]],
                [7.2, [135, 140, 145, 150, 155, 150, 145, 140, 135, 130]],
                [7.3, [110, 120, 130, 140, 150, 140, 130, 120, 110, 105]],
                [7.4, [95, 110, 125, 140, 155, 140, 125, 110, 95, 90]],
                [7.5, [140, 145, 150, 155, 160, 155, 150, 145, 140, 135]],
                [7.6, [115, 125, 135, 145, 155, 145, 135, 125, 115, 110]],
                [7.7, [100, 115, 130, 145, 160, 145, 130, 115, 100, 95]],
                [7.8, [145, 150, 155, 160, 165, 160, 155, 150, 145, 140]],
                [7.9, [120, 130, 140, 150, 160, 150, 140, 130, 120, 115]],
                [8.0, [105, 120, 135, 150, 165, 150, 135, 120, 105, 100]],
                [8.1, [150, 155, 160, 165, 170, 165, 160, 155, 150, 145]],
                [8.2, [125, 135, 145, 155, 165, 155, 145, 135, 125, 120]],
                [8.3, [110, 125, 140, 155, 170, 155, 140, 125, 110, 105]],
                [8.4, [155, 160, 165, 170, 175, 170, 165, 160, 155, 150]],
                [8.5, [130, 140, 150, 160, 170, 160, 150, 140, 130, 125]],
                [8.6, [115, 130, 145, 160, 175, 160, 145, 130, 115, 110]],
                [8.7, [160, 165, 170, 175, 180, 175, 170, 165, 160, 155]],
                [8.8, [135, 145, 155, 165, 175, 165, 155, 145, 135, 130]],
                [8.9, [120, 135, 150, 165, 180, 165, 150, 135, 120, 115]],
                [9.0, [165, 170, 175, 180, 185, 180, 175, 170, 165, 160]],
                [9.1, [140, 150, 160, 170, 180, 170, 160, 150, 140, 135]],
                [9.2, [125, 140, 155, 170, 185, 170, 155, 140, 125, 120]],
                [9.3, [170, 175, 180, 185, 190, 185, 180, 175, 170, 165]],
                [9.4, [145, 155, 165, 175, 185, 175, 165, 155, 145, 140]],
                [9.5, [130, 145, 160, 175, 190, 175, 160, 145, 130, 125]],
                [9.6, [175, 180, 185, 190, 195, 190, 185, 180, 175, 170]],
                [9.7, [150, 160, 170, 180, 190, 180, 170, 160, 150, 145]],
                [9.8, [135, 150, 165, 180, 195, 180, 165, 150, 135, 130]],
                [9.9, [180, 185, 190, 195, 200, 195, 190, 185, 180, 175]],
                [10.0, [155, 165, 175, 185, 195, 185, 175, 165, 155, 150]]])
receivedAmplitude = []
longTime = []
for i in range (len(receivedData)):
    receivedAmplitude.append(receivedData[i][1])
    longTime.append(receivedData[i][0])
print(longTime)

#len(receivedData[0][1]))*61+300

#Converts the amplitude array into decibels
db = 20 * np.log10(np.abs(receivedAmplitude))
#Plots the data
plt.imshow(db, aspect='auto', extent=(0, len(receivedData[0][1])*61+300, receivedData[0][0], (receivedData[-1][0])))
#plt.xticks(10, (len(receivedData[0][1]))*61+300)
#plt.yticks(longTime)
plt.colorbar()
plt.show()



"""
#Sample data from deepseek
ranges = [50, 100, 150, 200, 250, 300, 350, 400, 450, 500]
amplitude = np.array([[10, 15, 20, 25, 30, 25, 20, 15, 10, 5],
            [12, 17, 22, 27, 32, 27, 22, 17, 12, 7],
            [8, 13, 18, 23, 28, 23, 18, 13, 8, 3],
            [15, 20, 25, 30, 35, 30, 25, 20, 15, 10],
            [5, 10, 15, 20, 25, 20, 15, 10, 5, 1],
            [20, 25, 30, 35, 40, 35, 30, 25, 20, 15],
            [7, 12, 17, 22, 27, 22, 17, 12, 7, 2],
            [18, 23, 28, 33, 38, 33, 28, 23, 18, 13],
            [3, 8, 13, 18, 23, 18, 13, 8, 3, -2],
            [25, 30, 35, 40, 45, 40, 35, 30, 25, 20]]) 

            #Converts the test data into a 3d Array -> we don't need this yet. Could be useful for when we get the data and try to convert into what we have above

arr = []
for i in range(len(amplitude)):
    zist=[]
    for j in range(len(amplitude[0])):
        Z=db[j,i]
        zist.append(Z)
    arr.append(zist)    
arr = np.array(arr)
print (arr)
"""
